
CREATE TABLE IF NOT EXISTS users
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
    email      VARCHAR(255)                            NOT NULL,
    user_name  VARCHAR(512)                            NOT NULL,

    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_name        VARCHAR(512)                            NOT NULL,
    item_description VARCHAR(255)                            NOT NULL,
    item_available   BOOLEAN,
    owner_id         BIGINT                                  NOT NULL,
    request_id       BIGINT,
    CONSTRAINT FK_ITEM_TO_USERS FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_time TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_time   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    item_id    BIGINT                                  NOT NULL,
    booker_id  BIGINT                                  NOT NULL,
    status     VARCHAR                                 NOT NULL,
    CONSTRAINT FK_BOOKING_TO_ITEMS FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT FK_BOOKING_TO_USERS FOREIGN KEY (booker_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR(1024)                           NOT NULL,
    item_id   BIGINT                                  NOT NULL,
    author_id BIGINT                                  NOT NULL,
    created   TIMESTAMP                               NOT NULL,
    CONSTRAINT FK_COMMENT_TO_ITEMS FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT FK_COMMENT_TO_USERS FOREIGN KEY (author_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_description VARCHAR(255)                         NOT NULL,
    requester_id        BIGINT                               NOT NULL,
    created_time        TIMESTAMP                            NOT NULL,
    CONSTRAINT FK_REQUEST_TO_USERS FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);